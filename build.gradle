apply plugin: 'java'
apply plugin: 'eclipse-wtp'

version = '1.0.0'

repositories {
	mavenCentral()
}

eclipse {
	classpath {
		defaultOutputDir = file('build.eclipse')
		file {
			whenMerged { classpath -> 
				classpath.entries.findAll { entry -> entry.kind == 'lib' }*.exported = true
			}
			withXml { cp ->
				def node = cp.asNode()
				node.children().each { child ->

					if( child.@kind == 'lib' || ( child.@kind == 'src' && ['/Tools'].contains( child.@path ) ) ) {
						def attribs = child.appendNode 'attributes'
						def attrib = attribs.appendNode 'attribute';
						attrib.@name = "org.eclipse.jst.component.nondependency"
						attrib.@value = ""
					}
				}
			}
		}
	}
	project {
		natures = [ 'org.eclipse.jem.workbench.JavaEMFNature',
				'org.eclipse.wst.common.modulecore.ModuleCoreNature',
				'org.eclipse.jdt.core.javanature',
				'org.eclipse.wst.common.project.facet.core.nature' ]
		buildCommand 'org.eclipse.jdt.core.javabuilder'
		buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
		buildCommand 'org.eclipse.wst.validation.validationbuilder'
	}
}

dependencies {

	compile project(':Tools')

	compile 'commons-beanutils:commons-beanutils:1.8.3'
	compile 'org.jodd:jodd-wot:3.3.1'
	compile 'org.slf4j:slf4j-api:1.6.1'

	compile 'javax.servlet:javax.servlet-api:3.0.1'
	// =======================================

	testRuntime 'org.testng:testng:6.8+'
}

test {
	useTestNG(){
		suites file('src/test/CompleteRun.xml')
	}
}
